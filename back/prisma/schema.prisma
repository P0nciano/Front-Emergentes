generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Produto {
  id         Int          @id @default(autoincrement())
  nome       String       @db.VarChar(80)
  tipo       TipoProduto?
  codigo     String?      @db.VarChar(30)
  descricao  String?      @db.VarChar(1000)
  preco      Decimal      @db.Decimal(10, 2)
  quantidade Int          @default(0)
  foto       String       @db.VarChar(500)
  destaque   Boolean      @default(false)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  adminId    String?      @db.VarChar(36)
  ativo      Boolean      @default(true)
  compras    Compra[]
  admin      Admin?       @relation(fields: [adminId], references: [id])
  vendas     Venda[]

  @@map("produtos")
}

model Cliente {
  id        String      @id @default(uuid()) @db.VarChar(36)
  nome      String      @db.VarChar(60)
  email     String      @db.VarChar(40)
  senha     String      @db.VarChar(60)
  cidade    String      @db.VarChar(30)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  compras   Compra[]
  vendas    Venda[]

  @@map("clientes")
}

model Admin {
  id        String      @id @default(uuid()) @db.VarChar(36)
  nome      String      @db.VarChar(60)
  email     String      @db.VarChar(40)
  senha     String      @db.VarChar(60)
  nivel     Int         @default(2) @db.SmallInt
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  logs      Log[]
  produtos  Produto[]

  @@map("admins")
}

model Log {
  id          Int      @id @default(autoincrement())
  adminId     String   @db.VarChar(36)
  descricao   String   @db.VarChar(60)
  complemento String   @db.VarChar(200)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  admin       Admin    @relation(fields: [adminId], references: [id])

  @@map("logs")
}

model Venda {
  id          Int     @id @default(autoincrement())
  descricao   String  @db.VarChar(255)
  preco       Decimal @db.Decimal(10, 2)
  vendaStatus String  @db.VarChar(20)
  clienteId   String  @db.VarChar(36)
  produtoId   Int
  cliente     Cliente @relation(fields: [clienteId], references: [id])
  produto     Produto @relation(fields: [produtoId], references: [id])

  @@index([clienteId])
  @@index([produtoId])
  @@map("vendas")
}

model Compra {
  id         Int      @id @default(autoincrement())
  descricao  String   @db.VarChar(255)
  preco      Decimal  @db.Decimal(10, 2)
  dataCompra DateTime @default(now())
  clienteId  String   @db.VarChar(36)
  produtoId  Int
  status     String   @db.VarChar(20) @default("Aguardando")
  cliente    Cliente  @relation(fields: [clienteId], references: [id])
  produto    Produto  @relation(fields: [produtoId], references: [id])

  @@index([clienteId])
  @@index([produtoId])
  @@map("compras")
}


enum TipoProduto {
  OCULOS
  LENTE
  ACESSORIO
}
